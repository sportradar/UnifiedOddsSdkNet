<?xml version="1.0" encoding="UTF-8"?>
<xs:schema version="1.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.sportradar.com/custombet/v1/endpoints"
  targetNamespace="http://schemas.sportradar.com/custombet/v1/endpoints"
  elementFormDefault="qualified">

  <xs:element name="filtered_calculation_response" type="FilteredCalculationResponseType">
    <xs:annotation>
      <xs:documentation>Root element holding calculation response with filtered outcomes</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="FilteredCalculationResponseType">
    <xs:sequence>
      <xs:element name="calculation" type="FilteredCalculationResultType"/>
      <xs:element name="available_selections" type="AvailableSelectionsFilteredOutcomesType"/>
    </xs:sequence>
    <xs:attribute name="generated_at" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          Date and time when the response was generated by the server, in ISO 8601 format
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="FilteredCalculationResultType">
    <xs:attribute name="odds" type="xs:double" use="required">
      <xs:annotation>
        <xs:documentation>
          Total calculated odds for the selection, returned in EU odds format
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="probability" type="xs:double" use="required">
      <xs:annotation>
        <xs:documentation>The probability of this outcome returned in decimal</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="AvailableSelectionsFilteredOutcomesType">
    <xs:sequence>
      <xs:element name="event" type="FilteredEventType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FilteredEventType">
    <xs:annotation>
      <xs:documentation>Contains event specific data, like available markets</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="markets" type="FilteredMarketsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Valid event URN, such as sr:match:123456</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="FilteredMarketsType">
    <xs:annotation>
      <xs:documentation>Wrapper for available markets</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="market" type="FilteredMarketType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FilteredMarketType">
    <xs:annotation>
      <xs:documentation>Market with all outcomes available</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="outcome" type="FilteredOutcomeType" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Unique id for a market</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="specifiers" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Market specifiers to identify markets with additional parameters, if applicable, such as
          "total=1.5"
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="conflict" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>
          Specifies if the outcome conflicts with the selections or not
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="FilteredOutcomeType">
    <xs:annotation>
      <xs:documentation>An outcome for a market</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Unique id of the market outcome</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="conflict" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>
          Specifies if the outcome conflicts with the selections or not
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>

