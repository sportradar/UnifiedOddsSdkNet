<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
    <section name="oddsFeedSection" type="Sportradar.OddsFeed.SDK.API.Internal.OddsFeedConfigurationSection, Sportradar.OddsFeed.SDK" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <!--  
  
    Required attributes:    
    accessToken - the access token used for the authentication to the broker and to the sports api
    
    Optional attributes:
    inactivitySeconds - sets the max time window between two messages before the producer is market as "down" (between 20 and 180 seconds; default: 20)
    host - sets the URL of the messaging host (broker) (mq.betradar.com)
    virtualHost - sets the name of the virtual host configured on the messaging server (broker)
    apiHost - sets the URL of the API host (https://api.betradar.com)
    useSSL - sets the value indicating whether a secure connection to the message broker should be used (true or false)
    supportedLanguages - sets the comma delimited string of all languages (en,de,nl)
    useIntegrationEnvironment - sets a value indicating whether the unified feed integration environment should be used (true or false)
    exceptionHandlingStrategy - sets a ExceptionHandlingStrategy enum member specifying how to handle exceptions thrown to outside callers (ExceptionHandlingStrategy.CATCH or ExceptionHandlingStrategy.THROW)
    disabledProducers - sets the comma delimited list of ids of disabled producers (1,2,7,9)
    maxRecoveryTime - sets the timeout for recovery to finish (minimum 900 sec)
    nodeId - sets the node id for this instance of the sdk (recommended when running multiple instances). MTS customer must set this value! Use only positive numbers; negative are reserved for internal use.
    adjustAfterAge - gets the indication whether the after age should be adjusted before executing recovery request
    httpClientTimeout - sets the timeout for HTTP responses used to fetch data from API (between 10 and 100 seconds; default: 30)
    
  -->
  
  <oddsFeedSection accessToken="" supportedLanguages="en,de" useIntegrationEnvironment="true" nodeId="1" />

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net208">
        <arg key="configType" value="FILE"/>
        <arg key="configFile" value="log4net.config"/>
      </factoryAdapter>
    </logging>
  </common>
  
  <system.runtime.caching>
    <memoryCache>
      <namedCaches>
        <add name="tournamentDetailsCache" cacheMemoryLimitMegabytes="100" physicalMemoryLimitPercentage="0" pollingInterval="00:02:00" />
        <add name="sportEventCache" cacheMemoryLimitMegabytes="1000" physicalMemoryLimitPercentage="0" pollingInterval="00:02:00" />
        <add name="eventStatusCache" cacheMemoryLimitMegabytes="256" physicalMemoryLimitPercentage="0" pollingInterval="00:02:00" />
        <add name="invariantMarketsDescriptionsCache" cacheMemoryLimitMegabytes="100" physicalMemoryLimitPercentage="0" pollingInterval="00:02:00" />
        <add name="variantMarketsDescriptionsCache" cacheMemoryLimitMegabytes="100" physicalMemoryLimitPercentage="0" pollingInterval="00:02:00" />
        <add name="profileCache" cacheMemoryLimitMegabytes="50" physicalMemoryLimitPercentage="0" pollingInterval="00:02:00" />
      </namedCaches>
    </memoryCache>
  </system.runtime.caching>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
</configuration>